{"version":3,"sources":["components/UserDelete.js","components/User.js","components/UserAdd.js","App.js","serviceWorker.js","index.js"],"names":["UserDelete","props","state","open","handleClickOpen","bind","handleClose","this","setState","id","fetch","method","stateRefresh","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","Typography","gutterBottom","DialogActions","e","deleteUser","React","Component","User","TableRow","TableCell","login_id","join","UserAdd","handleFormSubmit","handleValueChange","addUser","preventDefault","then","response","console","log","data","nextState","target","name","value","formdata","FormData","append","post","headers","TextField","label","type","onChange","withStyles","theme","hidden","display","App","callApi","a","json","body","users","res","catch","err","classes","className","root","AppBar","position","IconButton","menuButton","aria-label","title","noWrap","grow","search","searchIcon","InputBase","placeholder","inputRoot","input","inputInput","menu","Paper","Table","table","TableHead","map","c","tableHead","TableBody","width","overflowX","marginTop","marginBottom","justifyContent","paper","marginLeft","marginRight","flexGrow","fontSize","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","spacing","unit","height","pointerEvents","alignItems","paddingTop","paddingRight","paddingBottom","paddingLeft","Boolean","window","location","hostname","match","createMuiTheme","typography","fontFamily","ReactDOM","render","MuiThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.591a14ee.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\n\nclass UserDelete extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        };\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleClickOpen() {\n        this.setState({\n            open: true\n        });\n    }\n\n    handleClose() {\n        this.setState({\n            open: false\n        });\n    }\n\n    deleteUser(id) {\n        const url = '/api/deleteUser/' + id;\n        fetch(url, {\n            method: 'DELETE'\n        });\n        this.props.stateRefresh();\n    }\n\n    render() {\n        return (\n            <div>\n            <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickOpen}>\n                삭제\n            </Button>\n            <Dialog onClose={this.handleClose} open={this.state.open}>\n                <DialogTitle onClose={this.handleClose}>경고</DialogTitle>\n                <DialogContent>\n                    <Typography gutterBottom>선택한 유저가 삭제됩니다.</Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={(e) => {this.deleteUser(this.props.id)}}>삭제</Button>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n                </DialogActions>\n            </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default UserDelete","import React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport UserDelete from './UserDelete';\n\nclass User extends React.Component {\n    render() {\n        return (\n            <TableRow>\n                <TableCell>{this.props.id}</TableCell>\n                <TableCell>{this.props.login_id}</TableCell>\n                <TableCell>{this.props.join}</TableCell>\n                <TableCell><UserDelete stateRefresh={this.props.stateRefresh} id={this.props.id}/></TableCell>\n            </TableRow>\n        )\n    }\n}\n\nexport default User;","import React from 'react'\nimport { post } from 'axios';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    hidden: {\n        display: 'none'\n    }\n});\n\nclass UserAdd extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            login_id: '',\n        }\n\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleValueChange = this.handleValueChange.bind(this);\n        this.addUser = this.addUser.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleFormSubmit(e) {\n        e.preventDefault()\n        this.addUser()\n        .then((response) => {\n            console.log(response.data);\n            this.props.stateRefresh();\n        })\n\n        //유저 추가 후, 양식 비움\n        this.setState({\n            login_id: ''\n        })\n\n        //페이지 새로고침\n        //window.location.reload();\n        //this.props.stateRefresh();\n    }\n\n    handleValueChange(e) {\n        let nextState = {};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n    }\n\n    addUser() {\n        const url = '/api/addUser';\n        var formdata = new FormData();\n        formdata.append('login_id', this.state.login_id)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n\n        return post(url, formdata, config);\n    }\n\n    handleClickOpen() {\n        this.setState({\n            open: true\n        });\n    }\n\n    handleClose() {\n        this.setState({\n            login_id: '',\n            open: false\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\n                    유저 추가하기\n                </Button>\n                <Dialog open={this.state.open} onClose={this.handleClose}>\n                    <DialogTitle>유저 추가</DialogTitle>\n                    <DialogContent>\n                        <TextField label=\"로그인 아이디\" type=\"text\" name=\"login_id\" value={this.state.login_id} onChange={this.handleValueChange} /><br/>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(UserAdd)","import React, {Component} from 'react';\nimport User from './components/User';\nimport UserAdd from './components/UserAdd';\nimport './App.css';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles, createStyles } from '@material-ui/styles';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    overflowX: \"auto\"\n  },\n  menu: {\n    marginTop: 15,\n    marginBottom: 15,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  paper: {\n    marginLeft: 18,\n    marginRight: 18\n  },\n  grow: {\n    flexGrow: 1\n  },\n  tableHead: {\n    fontSize: '1.0rem'\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    //transition: theme.transition.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n});\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: ''\n    }\n    this.stateRefresh = this.stateRefresh.bind(this);\n  }\n\n  stateRefresh() {\n    this.setState({\n      users: ''\n    });\n    this.callApi()\n      .then(res => this.setState({users: res}))\n      .catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({users: res}))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('/getUserList');\n    const body = await response.json();\n    return body;\n  }\n\n  render() {\n    const { classes } = this.props;\n    const cellList = [\"인덱스\", \"로그인 아이디\", \"가입 날짜\", \"설정\"]\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <ToolBar>\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n              유저 관리\n            </Typography>\n            <div className={classes.grow} />\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"검색\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput\n                }}\n              />\n            </div>\n          </ToolBar>\n        </AppBar>\n\n        <div className={classes.menu}>\n          <UserAdd stateRefresh={this.stateRefresh} />\n        </div>\n\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>            \n              {cellList.map(c => {\n                return <TableCell className={classes.tableHead}>{c}</TableCell>\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {this.state.users ? this.state.users.map(c => {\n          return <User stateRefresh={this.stateRefresh} id={c.id} login_id={c.login_id} join={c.join} />\n          }) : ''}\n          </TableBody>\n        </Table>\n      </Paper>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: '\"Noto Sans KR\", serif'\n    },\n});\n\nReactDOM.render(<MuiThemeProvider theme={theme}> <App /> </MuiThemeProvider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}